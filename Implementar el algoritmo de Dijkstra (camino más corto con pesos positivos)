#include <iostream>
#include <vector>
#include <queue>
using namespace std;

const int INF = 1e9;
int main(){
    int n = 5;
    vector<vector<pair<int,int>>> grafo = {
        {{1,10},{2,3}},
        {{2,1},{3,2}},
        {{1,4},{3,8},{4,2}},
        {{4,7}},
        {}
    };
    vector<int> dist(n, INF);
    dist[0] = 0;
    priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
    pq.push({0,0});

    while(!pq.empty()){
        int d = pq.top().first, u = pq.top().second;
        pq.pop();
        if(d > dist[u]) continue;
        for(auto &arista : grafo[u]){
            int v = arista.first, peso = arista.second;
            if(dist[u] + peso < dist[v]){
                dist[v] = dist[u] + peso;
                pq.push({dist[v], v});
            }
        }
    }

    cout << "Distancias mÃ­nimas desde el nodo 0:\n";
    for(int i=0;i<n;i++) cout << "Nodo "<<i<<": "<<dist[i]<<endl;
    return 0;
}
