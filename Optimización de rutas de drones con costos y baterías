#include <iostream>
#include <vector>
#include <queue>
using namespace std;

struct Nodo { int id, costo; };

void rutasDrones(int inicio, vector<vector<pair<int,int>>>& grafo) {
    int n = grafo.size();
    vector<int> costo(n, 1e9);
    costo[inicio] = 0;
    priority_queue<pair<int,int>, vector<pair<int,int>>, greater<>> pq;
    pq.push({0, inicio});

    while(!pq.empty()) {
        auto [c, u] = pq.top(); pq.pop();
        for(auto [v, w]: grafo[u])
            if(c+w < costo[v]){
                costo[v] = c+w;
                pq.push({costo[v], v});
            }
    }

    for(int i=0;i<n;i++) cout<<"Nodo "<<i<<" -> Costo m√≠nimo: "<<costo[i]<<endl;
}

int main(){
    vector<vector<pair<int,int>>> grafo = {
        {{1,3},{2,6}},
        {{0,3},{3,2},{4,4}},
        {{0,6},{4,1}},
        {{1,2},{4,1}},
        {{1,4},{2,1},{3,1}}
    };
    rutasDrones(0, grafo);
    return 0;
}
