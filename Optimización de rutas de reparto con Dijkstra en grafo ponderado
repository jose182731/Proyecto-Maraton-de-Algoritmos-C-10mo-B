#include <iostream>
#include <vector>
#include <queue>
using namespace std;
typedef pair<int,int> Par;
#define INF 1e9

int main(){
    int n=5;
    vector<vector<Par>> grafo(n);
    grafo[0]={{1,10},{2,3}};
    grafo[1]={{2,1},{3,2}};
    grafo[2]={{1,4},{3,8},{4,2}};
    grafo[3]={{4,7}};
    grafo[4]={{3,9}};

    vector<int> dist(n,INF);
    dist[0]=0;
    priority_queue<Par,vector<Par>,greater<Par>> pq;
    pq.push({0,0});

    while(!pq.empty()){
        int d=pq.top().first, u=pq.top().second; pq.pop();
        for(auto [v,w]:grafo[u])
            if(d+w<dist[v]){
                dist[v]=d+w;
                pq.push({dist[v],v});
            }
    }

    cout<<"Distancias desde nodo 0:\n";
    for(int i=0;i<n;i++) cout<<i<<": "<<dist[i]<<endl;
    return 0;
}
