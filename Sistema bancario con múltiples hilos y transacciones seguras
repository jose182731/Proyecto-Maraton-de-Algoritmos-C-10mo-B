#include <iostream>
#include <vector>
#include <thread>
#include <mutex>
using namespace std;

mutex mtx;
class Cuenta {
    string titular; double saldo;
public:
    Cuenta(string t,double s):titular(t),saldo(s){}
    void depositar(double m){ lock_guard<mutex> lock(mtx); saldo+=m; }
    void retirar(double m){ lock_guard<mutex> lock(mtx); if(saldo>=m) saldo-=m; }
    void mostrar(){ cout<<titular<<" - Saldo: "<<saldo<<endl; }
};

int main(){
    vector<Cuenta> cuentas={{"Ana",500},{"Luis",1000}};
    thread t1([&]{ cuentas[0].depositar(300); });
    thread t2([&]{ cuentas[1].retirar(400); });
    t1.join(); t2.join();

    for(auto &c:cuentas) c.mostrar();
    return 0;
}
